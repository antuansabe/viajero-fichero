---
import Container from "@components/container.astro";
import Label from "@components/ui/label.astro";
import { getFormattedDate } from "@utils/all";
import Layout from "@layouts/Layout.astro";
import { authors } from "@data/authors";
import { categories } from "@data/category";
import { Image, Picture } from "@astrojs/image/components";
import Authorcard from "@components/authorcard.astro";
import { getCollection, CollectionEntry } from "astro:content";

type Props = CollectionEntry<"blog">;

export async function getStaticPaths() {
  const blog = await getCollection("blog");
  return blog.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;

const { Content } = await post.render();

// const author = authors.find((item) => item.slug === entry.data.author);
// const category = categories.find((item) => item.slug === entry.data.category);
---

<div>hey</div>
<Content />
<!--
<Layout
  title={entry.data.title}
  desc={entry.data.excerpt}
  ogimage={entry.data.image}>
  <Container>
    <div class="max-w-screen-md mx-auto">
      <div class="text-center">
        <Label theme={category.color}>{category.title}</Label>
      </div>

      <h1
        class="mt-2 mb-3 text-3xl font-semibold tracking-tight text-center lg:leading-snug text-brand-primary lg:text-4xl dark:text-white">
        {entry.data.title}
      </h1>

      <div class="flex justify-center mt-3 space-x-3 text-gray-500">
        <div class="flex items-center gap-3">
          <div class="relative flex-shrink-0 w-10 h-10">
            {
              author.image && (
                <Image
                  src={author.image}
                  alt="Author Photo"
                  width={40}
                  height={40}
                  loading="eager"
                  class="rounded-full"
                />
              )
            }
          </div>

          <div>
            <p class="text-gray-800 dark:text-gray-400">
              {author.name}
            </p>
            <div class="flex items-center space-x-2 text-sm">
              <time
                class="text-gray-500 dark:text-gray-400"
                datetime={entry.data.publishDate}>
                {getFormattedDate(entry.data.publishDate)}
              </time>
              <span>
                · {Math.round(entry.data.estReadingTime) || "5"} min read
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </Container>

  <div
    class="relative z-0 max-w-screen-lg mx-auto overflow-hidden lg:rounded-lg aspect-video">
    {
      entry.data.image && (
        <Picture
          src={entry.data.image}
          widths={[200, 400, 800]}
          sizes="(max-width: 640px) 90vw, 480px"
          aspectRatio="16:9"
          alt="Thumbnail"
          loading="eager"
          class="w-full"
        />
      )
    }
  </div>

  <Container>
    <article class="max-w-screen-md mx-auto">
      <div
        class="mx-auto my-3 prose prose-base dark:prose-invert prose-a:text-blue-500">
        <Content />

        <div class="w-full md:w-auto flex items-center flex-wrap gap-3">
          {
            entry.data.tags.map((tag) => (
              <span class="text-sm text-gray-500">#{tag}</span>
            ))
          }
        </div>
      </div>

      <div class="flex justify-center mt-7 mb-7">
        <a
          href="/"
          class="text-sm text-blue-600 dark:text-blue-500 bg-blue-50 px-5 py-3 rounded-md hover:bg-blue-100 transition">
          ← View all posts
        </a>
      </div>
      {author && <Authorcard author={author} />}
    </article>
  </Container>
</Layout> -->
